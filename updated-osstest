AWSTemplateFormatVersion: 2010-09-09
Description: HIDS CloudWatch Logs ElasticSearch Stack
Mappings:
  RegionMap:
    us-east-1:
      AmznLinux: ami-0b33d91d
    us-east-2:
      AmznLinux: ami-c55673a0
Parameters:
  HIDSInstanceSize:
    Default: t2.micro
    Description: Instance size for OSSEC Test Instances.
    Type: String
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
  KeyPair:
    Default: ''
    Description: >-
      Public/private key pair, which allows you to connect securely to your
      instance after it launches.
    Type: 'AWS::EC2::KeyPair::KeyName'
  TrustedNetwork:
    Description: >-
      Only connections from this network are allowed for EC2 instances. Enter an IP or CIDR 
      162.246.218.28/32
    Type: String
  VPCId:
    Description: Please provide a VPC to deploy the solution into.
    Type: 'AWS::EC2::VPC::Id'
  SubnetId:
    Description: >-
      Please provide a subnet id with outbound connectivity within the VPC you
      selected above.
    Type: 'AWS::EC2::Subnet::Id'
  AssignPublicIP:
    Description: >-
      Assign a public IP to the EC2 instances? Set to true if you connect out
      through an Internet Gateway or leave as false if you connect through a NAT
      Gateway.
    Default: false
    Type: String
    AllowedValues:
      - true
      - false
Conditions:
  AssignPubIp: !Equals 
    - !Ref AssignPublicIP
    - true
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Instance Configuration
        Parameters:
          - HIDSInstanceSize
          - KeyPair
      - Label:
          default: Network Configuration
        Parameters:
          - VPCId
          - SubnetId
          - AssignPublicIP
          - TrustedNetwork
    ParameterLabels:
      HIDSInstanceSize:
        default: EC2 instance size for test server
      KeyPair:
        default: SSH Key Pair
      TrustedNetwork:
        default: Trusted Network CIDR
      VPCId:
        default: Target VPC for solution
      Subnet:
        default: Subnet to launch instance into
      AssignPublicIP:
        default: Assign Public IP for EC2
Resources:
  HIDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Incoming Traffic Group
      SecurityGroupIngress:
        - CidrIp:
            Ref: TrustedNetwork
          FromPort: '22'
          IpProtocol: tcp
          ToPort: '22'
        - CidrIp:
            Ref: TrustedNetwork
          FromPort: '80'
          IpProtocol: tcp
          ToPort: '80'
      VpcId:
        Ref: VPCId
      Tags:
        - Key: Name
          Value: hids-security-group
  HIDSInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
        Version: 2012-10-17
      Path: /
  HIDSInstancePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: hids_ec2_cwl_policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogStreams'
            Resource: 'arn:aws:logs:*:*:*'
      Roles:
        - Ref: HIDSInstanceRole
  HIDSInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - Ref: HIDSInstanceRole
  HIDSLinuxHost01:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          HIDS_Install:
            - configure_hids
            - install_hids
            - start_hids
        configure_hids:
          files:
            /tmp/preloaded-vars.conf:
              content: !Sub |
                USER_LANGUAGE="en";
                USER_NO_STOP="y";
                USER_INSTALL_TYPE="local";
                USER_DIR="/var/ossec";
                USER_ENABLE_SYSCHECK="y";
                USER_ENABLE_ROOTCHECK="y";
                USER_UPDATE_RULES="y";
                USER_ENABLE_EMAIL="n";
                USER_ENABLE_FIREWALL_RESPONSE="n";
                USER_ENABLE_ACTIVE_RESPONSE="n";
              mode: '000644'
              owner: root
              group: root
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-stat
                [/var/ossec/logs/alerts/alerts.json]
                file = /var/ossec/logs/alerts/alerts.json
                buffer_duration = 5000
                log_stream_name = {instance_id}
                initial_position = start_of_file
              mode: '000644'
              owner: root
              group: root
          commands:
            download:
              cwd: /tmp
              env:
                ossec_version: 2.9.0
              command: >-
                (wget
                https://github.com/ossec/ossec-hids/archive/${ossec_version}.tar.gz
                && mv ${ossec_version}.tar.gz
                ossec-hids-${ossec_version}.tar.gz)
            unzip:
              cwd: /tmp
              env:
                ossec_version: 2.9.0
                ossec_checksum: abd5741dc474cbce5cc116f46a5ef2528c847918
              command: >-
                (checksum=$(sha1sum ossec-hids-${ossec_version}.tar.gz | cut -d"
                " -f1); if [ $checksum == $ossec_checksum ]; then tar xfz
                ossec-hids-${ossec_version}.tar.gz && cd
                ossec-hids-${ossec_version} ; else "Wrong checksum. Download
                again or check if file has been tampered with."; fi)
        install_hids:
          commands:
            install:
              cwd: /tmp
              env:
                ossec_version: 2.9.0
              command: >-
                (cp /tmp/preloaded-vars.conf
                /tmp/ossec-hids-${ossec_version}/etc/ && cd
                /tmp/ossec-hids-${ossec_version} && ./install.sh)
        start_hids:
          commands:
            start1:
              env:
                aws_region: !Ref 'AWS::Region'
              command: >-
                sed -i '/<global>/a \    \<jsonout_output>yes<\/jsonout_output>'
                /var/ossec/etc/ossec.conf; sed -i "/region/c
                region=${aws_region}" /etc/awslogs/awscli.conf
            start2:
              command: >-
                sed -i '/Files to monitor/a <localfile>\n \   
                \<log_format>apache<\/log_format>\n \   
                \<location>\/var\/log\/httpd\/access_log<\/location>\n<\/localfile>'
                /var/ossec/etc/ossec.conf
            start3:
              waitAfterCompletion: 15
              env:
                log_group: !Ref HIDSAlerts
              command: >-
                /var/ossec/bin/ossec-control start; sed -i "/alerts.json]/a
                log_group_name=${log_group}" /etc/awslogs/awslogs.conf
            start4:
              command: >-
                chkconfig awslogs on && service awslogs start; chkconfig httpd
                on && service httpd start
    Properties:
      ImageId:
        'Fn::FindInMap':
          - RegionMap
          - Ref: 'AWS::Region'
          - AmznLinux
      InstanceType:
        Ref: HIDSInstanceSize
      IamInstanceProfile:
        Ref: HIDSInstanceProfile
      KeyName:
        Ref: KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: !If 
            - AssignPubIp
            - true
            - false
          DeviceIndex: '0'
          GroupSet:
            - Ref: HIDSSecurityGroup
          SubnetId:
            Ref: SubnetId
      Tags:
        - Key: Name
          Value: hids-linux-test-host01
      UserData:
        'Fn::Base64': !Sub >
          #!/bin/bash -xe

          yum update -y

          yum install -y gcc awslogs httpd telnet

          /usr/bin/aws configure set region ${AWS::Region}

          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource
          HIDSLinuxHost01 --configsets HIDS_Install --region ${AWS::Region}

          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource
          HIDSLinuxHost01 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
  HIDSAlerts:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join 
        - ''
        - - hids-alerts-
          - !Ref 'AWS::Region'
      RetentionInDays: 7
Outputs:
  HIDSLinuxServer:
    Description: First Test EC2 Instance Internal IP Address.
    Value:
      'Fn::GetAtt':
        - HIDSLinuxHost01
        - PrivateIp
  HIDSSecurityGroup:
    Description: The HIDS Security Group ID.
    Value:
      Ref: HIDSSecurityGroup
  Region:
    Description: Region of the stack.
    Value:
      Ref: 'AWS::Region'
